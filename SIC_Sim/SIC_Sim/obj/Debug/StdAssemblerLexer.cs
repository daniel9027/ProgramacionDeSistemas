//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Daniel\Documents\GitHub\ProgramacionDeSistemas\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class StdAssemblerLexer : Lexer {
	public const int
		WS=1, NL=2, COMA=3, CHAR=4, HEX=5, APOSTROFE=6, START=7, END=8, RSUB=9, 
		BYTE=10, WORD=11, RESB=12, RESW=13, CODOP=14, VAL=15;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "NL", "COMA", "CHAR", "HEX", "APOSTROFE", "START", "END", "RSUB", 
		"BYTE", "WORD", "RESB", "RESW", "CODOP", "VAL"
	};


	public StdAssemblerLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'\n'", "','", "'C'", "'X'", "'''", "'START'", "'END'", "'RSUB'", 
		"'BYTE'", "'WORD'", "'RESB'", "'RESW'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "NL", "COMA", "CHAR", "HEX", "APOSTROFE", "START", "END", 
		"RSUB", "BYTE", "WORD", "RESB", "RESW", "CODOP", "VAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "StdAssembler.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x11\xA6\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5"+
		"\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3"+
		"\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x5\xF\x9D\n\xF\x3\x10\x6\x10\xA0\n\x10\r\x10\xE"+
		"\x10\xA1\x3\x10\x5\x10\xA5\n\x10\x2\x2\x2\x11\x3\x2\x3\x5\x2\x4\a\x2\x5"+
		"\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19"+
		"\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11\x3\x2\x5\x4\x2\v\v\xF\xF\x4\x2"+
		"\x32^zz\x4\x2JJjj\xBF\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2"+
		"\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3"+
		"\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2"+
		"\x1F\x3\x2\x2\x2\x3!\x3\x2\x2\x2\x5%\x3\x2\x2\x2\a\'\x3\x2\x2\x2\t)\x3"+
		"\x2\x2\x2\v+\x3\x2\x2\x2\r-\x3\x2\x2\x2\xF/\x3\x2\x2\x2\x11\x35\x3\x2"+
		"\x2\x2\x13\x39\x3\x2\x2\x2\x15>\x3\x2\x2\x2\x17\x43\x3\x2\x2\x2\x19H\x3"+
		"\x2\x2\x2\x1BM\x3\x2\x2\x2\x1D\x9C\x3\x2\x2\x2\x1F\x9F\x3\x2\x2\x2!\""+
		"\t\x2\x2\x2\"#\x3\x2\x2\x2#$\b\x2\x2\x2$\x4\x3\x2\x2\x2%&\a\f\x2\x2&\x6"+
		"\x3\x2\x2\x2\'(\a.\x2\x2(\b\x3\x2\x2\x2)*\a\x45\x2\x2*\n\x3\x2\x2\x2+"+
		",\aZ\x2\x2,\f\x3\x2\x2\x2-.\a)\x2\x2.\xE\x3\x2\x2\x2/\x30\aU\x2\x2\x30"+
		"\x31\aV\x2\x2\x31\x32\a\x43\x2\x2\x32\x33\aT\x2\x2\x33\x34\aV\x2\x2\x34"+
		"\x10\x3\x2\x2\x2\x35\x36\aG\x2\x2\x36\x37\aP\x2\x2\x37\x38\a\x46\x2\x2"+
		"\x38\x12\x3\x2\x2\x2\x39:\aT\x2\x2:;\aU\x2\x2;<\aW\x2\x2<=\a\x44\x2\x2"+
		"=\x14\x3\x2\x2\x2>?\a\x44\x2\x2?@\a[\x2\x2@\x41\aV\x2\x2\x41\x42\aG\x2"+
		"\x2\x42\x16\x3\x2\x2\x2\x43\x44\aY\x2\x2\x44\x45\aQ\x2\x2\x45\x46\aT\x2"+
		"\x2\x46G\a\x46\x2\x2G\x18\x3\x2\x2\x2HI\aT\x2\x2IJ\aG\x2\x2JK\aU\x2\x2"+
		"KL\a\x44\x2\x2L\x1A\x3\x2\x2\x2MN\aT\x2\x2NO\aG\x2\x2OP\aU\x2\x2PQ\aY"+
		"\x2\x2Q\x1C\x3\x2\x2\x2RS\a\x43\x2\x2ST\a\x46\x2\x2T\x9D\a\x46\x2\x2U"+
		"V\a\x43\x2\x2VW\aP\x2\x2W\x9D\a\x46\x2\x2XY\a\x45\x2\x2YZ\aQ\x2\x2Z[\a"+
		"O\x2\x2[\x9D\aR\x2\x2\\]\a\x46\x2\x2]^\aK\x2\x2^\x9D\aX\x2\x2_\x9D\aL"+
		"\x2\x2`\x61\aL\x2\x2\x61\x62\aG\x2\x2\x62\x9D\aS\x2\x2\x63\x64\aL\x2\x2"+
		"\x64\x65\aI\x2\x2\x65\x9D\aV\x2\x2\x66g\aL\x2\x2gh\aN\x2\x2h\x9D\aV\x2"+
		"\x2ij\aL\x2\x2jk\aU\x2\x2kl\aW\x2\x2l\x9D\a\x44\x2\x2mn\aN\x2\x2no\a\x46"+
		"\x2\x2o\x9D\a\x43\x2\x2pq\aN\x2\x2qr\a\x46\x2\x2rs\a\x45\x2\x2s\x9D\a"+
		"J\x2\x2tu\aN\x2\x2uv\a\x46\x2\x2v\x9D\aN\x2\x2wx\aN\x2\x2xy\a\x46\x2\x2"+
		"y\x9D\aZ\x2\x2z{\aO\x2\x2{|\aW\x2\x2|\x9D\aN\x2\x2}~\aQ\x2\x2~\x9D\aT"+
		"\x2\x2\x7F\x80\aT\x2\x2\x80\x9D\a\x46\x2\x2\x81\x82\aU\x2\x2\x82\x83\a"+
		"V\x2\x2\x83\x9D\a\x43\x2\x2\x84\x85\aU\x2\x2\x85\x86\aV\x2\x2\x86\x87"+
		"\a\x45\x2\x2\x87\x9D\aJ\x2\x2\x88\x89\aU\x2\x2\x89\x8A\aV\x2\x2\x8A\x9D"+
		"\aN\x2\x2\x8B\x8C\aU\x2\x2\x8C\x8D\aV\x2\x2\x8D\x8E\aU\x2\x2\x8E\x9D\a"+
		"Y\x2\x2\x8F\x90\aU\x2\x2\x90\x91\aV\x2\x2\x91\x9D\aZ\x2\x2\x92\x93\aU"+
		"\x2\x2\x93\x94\aW\x2\x2\x94\x9D\a\x44\x2\x2\x95\x96\aV\x2\x2\x96\x9D\a"+
		"\x46\x2\x2\x97\x98\aV\x2\x2\x98\x99\aK\x2\x2\x99\x9D\aZ\x2\x2\x9A\x9B"+
		"\aY\x2\x2\x9B\x9D\a\x46\x2\x2\x9CR\x3\x2\x2\x2\x9CU\x3\x2\x2\x2\x9CX\x3"+
		"\x2\x2\x2\x9C\\\x3\x2\x2\x2\x9C_\x3\x2\x2\x2\x9C`\x3\x2\x2\x2\x9C\x63"+
		"\x3\x2\x2\x2\x9C\x66\x3\x2\x2\x2\x9Ci\x3\x2\x2\x2\x9Cm\x3\x2\x2\x2\x9C"+
		"p\x3\x2\x2\x2\x9Ct\x3\x2\x2\x2\x9Cw\x3\x2\x2\x2\x9Cz\x3\x2\x2\x2\x9C}"+
		"\x3\x2\x2\x2\x9C\x7F\x3\x2\x2\x2\x9C\x81\x3\x2\x2\x2\x9C\x84\x3\x2\x2"+
		"\x2\x9C\x88\x3\x2\x2\x2\x9C\x8B\x3\x2\x2\x2\x9C\x8F\x3\x2\x2\x2\x9C\x92"+
		"\x3\x2\x2\x2\x9C\x95\x3\x2\x2\x2\x9C\x97\x3\x2\x2\x2\x9C\x9A\x3\x2\x2"+
		"\x2\x9D\x1E\x3\x2\x2\x2\x9E\xA0\t\x3\x2\x2\x9F\x9E\x3\x2\x2\x2\xA0\xA1"+
		"\x3\x2\x2\x2\xA1\x9F\x3\x2\x2\x2\xA1\xA2\x3\x2\x2\x2\xA2\xA4\x3\x2\x2"+
		"\x2\xA3\xA5\t\x4\x2\x2\xA4\xA3\x3\x2\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5 \x3"+
		"\x2\x2\x2\x6\x2\x9C\xA1\xA4\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SIC_Sim
