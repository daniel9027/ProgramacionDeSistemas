//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\becarios\Documents\GitHub\ProgramacionDeSistemas\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class StdAssemblerLexer : Lexer {
	public const int
		WS=1, NL=2, COMA=3, CHAR=4, HEX=5, H=6, APOSTROFE=7, START=8, END=9, RSUB=10, 
		BYTE=11, WORD=12, RESB=13, RESW=14, CODOP=15, ASCIIVAL=16;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "NL", "COMA", "CHAR", "HEX", "H", "APOSTROFE", "START", "END", "RSUB", 
		"BYTE", "WORD", "RESB", "RESW", "CODOP", "ASCIIVAL"
	};


	public StdAssemblerLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'\n'", "','", "'C'", "'X'", null, "'''", "'START'", "'END'", 
		"'RSUB'", "'BYTE'", "'WORD'", "'RESB'", "'RESW'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "NL", "COMA", "CHAR", "HEX", "H", "APOSTROFE", "START", "END", 
		"RSUB", "BYTE", "WORD", "RESB", "RESW", "CODOP", "ASCIIVAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "StdAssembler.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x12\xAA\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4"+
		"\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t"+
		"\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f"+
		"\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10\xA1\n\x10\x3"+
		"\x11\x6\x11\xA4\n\x11\r\x11\xE\x11\xA5\x3\x11\x5\x11\xA9\n\x11\x2\x2\x2"+
		"\x12\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n"+
		"\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12\x3\x2\x5\x5\x2\v\v\xF\xF\"\"\x4\x2JJjj\x4\x2\x32^zz\xC3\x2\x3"+
		"\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v"+
		"\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2"+
		"\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2"+
		"\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2"+
		"\x2\x2\x3#\x3\x2\x2\x2\x5\'\x3\x2\x2\x2\a)\x3\x2\x2\x2\t+\x3\x2\x2\x2"+
		"\v-\x3\x2\x2\x2\r/\x3\x2\x2\x2\xF\x31\x3\x2\x2\x2\x11\x33\x3\x2\x2\x2"+
		"\x13\x39\x3\x2\x2\x2\x15=\x3\x2\x2\x2\x17\x42\x3\x2\x2\x2\x19G\x3\x2\x2"+
		"\x2\x1BL\x3\x2\x2\x2\x1DQ\x3\x2\x2\x2\x1F\xA0\x3\x2\x2\x2!\xA3\x3\x2\x2"+
		"\x2#$\t\x2\x2\x2$%\x3\x2\x2\x2%&\b\x2\x2\x2&\x4\x3\x2\x2\x2\'(\a\f\x2"+
		"\x2(\x6\x3\x2\x2\x2)*\a.\x2\x2*\b\x3\x2\x2\x2+,\a\x45\x2\x2,\n\x3\x2\x2"+
		"\x2-.\aZ\x2\x2.\f\x3\x2\x2\x2/\x30\t\x3\x2\x2\x30\xE\x3\x2\x2\x2\x31\x32"+
		"\a)\x2\x2\x32\x10\x3\x2\x2\x2\x33\x34\aU\x2\x2\x34\x35\aV\x2\x2\x35\x36"+
		"\a\x43\x2\x2\x36\x37\aT\x2\x2\x37\x38\aV\x2\x2\x38\x12\x3\x2\x2\x2\x39"+
		":\aG\x2\x2:;\aP\x2\x2;<\a\x46\x2\x2<\x14\x3\x2\x2\x2=>\aT\x2\x2>?\aU\x2"+
		"\x2?@\aW\x2\x2@\x41\a\x44\x2\x2\x41\x16\x3\x2\x2\x2\x42\x43\a\x44\x2\x2"+
		"\x43\x44\a[\x2\x2\x44\x45\aV\x2\x2\x45\x46\aG\x2\x2\x46\x18\x3\x2\x2\x2"+
		"GH\aY\x2\x2HI\aQ\x2\x2IJ\aT\x2\x2JK\a\x46\x2\x2K\x1A\x3\x2\x2\x2LM\aT"+
		"\x2\x2MN\aG\x2\x2NO\aU\x2\x2OP\a\x44\x2\x2P\x1C\x3\x2\x2\x2QR\aT\x2\x2"+
		"RS\aG\x2\x2ST\aU\x2\x2TU\aY\x2\x2U\x1E\x3\x2\x2\x2VW\a\x43\x2\x2WX\a\x46"+
		"\x2\x2X\xA1\a\x46\x2\x2YZ\a\x43\x2\x2Z[\aP\x2\x2[\xA1\a\x46\x2\x2\\]\a"+
		"\x45\x2\x2]^\aQ\x2\x2^_\aO\x2\x2_\xA1\aR\x2\x2`\x61\a\x46\x2\x2\x61\x62"+
		"\aK\x2\x2\x62\xA1\aX\x2\x2\x63\xA1\aL\x2\x2\x64\x65\aL\x2\x2\x65\x66\a"+
		"G\x2\x2\x66\xA1\aS\x2\x2gh\aL\x2\x2hi\aI\x2\x2i\xA1\aV\x2\x2jk\aL\x2\x2"+
		"kl\aN\x2\x2l\xA1\aV\x2\x2mn\aL\x2\x2no\aU\x2\x2op\aW\x2\x2p\xA1\a\x44"+
		"\x2\x2qr\aN\x2\x2rs\a\x46\x2\x2s\xA1\a\x43\x2\x2tu\aN\x2\x2uv\a\x46\x2"+
		"\x2vw\a\x45\x2\x2w\xA1\aJ\x2\x2xy\aN\x2\x2yz\a\x46\x2\x2z\xA1\aN\x2\x2"+
		"{|\aN\x2\x2|}\a\x46\x2\x2}\xA1\aZ\x2\x2~\x7F\aO\x2\x2\x7F\x80\aW\x2\x2"+
		"\x80\xA1\aN\x2\x2\x81\x82\aQ\x2\x2\x82\xA1\aT\x2\x2\x83\x84\aT\x2\x2\x84"+
		"\xA1\a\x46\x2\x2\x85\x86\aU\x2\x2\x86\x87\aV\x2\x2\x87\xA1\a\x43\x2\x2"+
		"\x88\x89\aU\x2\x2\x89\x8A\aV\x2\x2\x8A\x8B\a\x45\x2\x2\x8B\xA1\aJ\x2\x2"+
		"\x8C\x8D\aU\x2\x2\x8D\x8E\aV\x2\x2\x8E\xA1\aN\x2\x2\x8F\x90\aU\x2\x2\x90"+
		"\x91\aV\x2\x2\x91\x92\aU\x2\x2\x92\xA1\aY\x2\x2\x93\x94\aU\x2\x2\x94\x95"+
		"\aV\x2\x2\x95\xA1\aZ\x2\x2\x96\x97\aU\x2\x2\x97\x98\aW\x2\x2\x98\xA1\a"+
		"\x44\x2\x2\x99\x9A\aV\x2\x2\x9A\xA1\a\x46\x2\x2\x9B\x9C\aV\x2\x2\x9C\x9D"+
		"\aK\x2\x2\x9D\xA1\aZ\x2\x2\x9E\x9F\aY\x2\x2\x9F\xA1\a\x46\x2\x2\xA0V\x3"+
		"\x2\x2\x2\xA0Y\x3\x2\x2\x2\xA0\\\x3\x2\x2\x2\xA0`\x3\x2\x2\x2\xA0\x63"+
		"\x3\x2\x2\x2\xA0\x64\x3\x2\x2\x2\xA0g\x3\x2\x2\x2\xA0j\x3\x2\x2\x2\xA0"+
		"m\x3\x2\x2\x2\xA0q\x3\x2\x2\x2\xA0t\x3\x2\x2\x2\xA0x\x3\x2\x2\x2\xA0{"+
		"\x3\x2\x2\x2\xA0~\x3\x2\x2\x2\xA0\x81\x3\x2\x2\x2\xA0\x83\x3\x2\x2\x2"+
		"\xA0\x85\x3\x2\x2\x2\xA0\x88\x3\x2\x2\x2\xA0\x8C\x3\x2\x2\x2\xA0\x8F\x3"+
		"\x2\x2\x2\xA0\x93\x3\x2\x2\x2\xA0\x96\x3\x2\x2\x2\xA0\x99\x3\x2\x2\x2"+
		"\xA0\x9B\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA1 \x3\x2\x2\x2\xA2\xA4\t\x4"+
		"\x2\x2\xA3\xA2\x3\x2\x2\x2\xA4\xA5\x3\x2\x2\x2\xA5\xA3\x3\x2\x2\x2\xA5"+
		"\xA6\x3\x2\x2\x2\xA6\xA8\x3\x2\x2\x2\xA7\xA9\t\x3\x2\x2\xA8\xA7\x3\x2"+
		"\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\"\x3\x2\x2\x2\x6\x2\xA0\xA5\xA8\x3\b\x2"+
		"\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SIC_Sim
