<<<<<<< HEAD
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\MILAN\Documents\GitHub\ProgramacionDeSistemas\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class StdAssemblerLexer : Lexer {
	public const int
		WS=1, NL=2, COMA=3, CHAR=4, HEX=5, H=6, APOSTROFE=7, START=8, END=9, RSUB=10, 
		BYTE=11, WORD=12, RESB=13, RESW=14, CODOP=15, DIR=16, HEXVAL=17, NUM=18, 
		ASCIIVAL=19;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "NL", "COMA", "CHAR", "HEX", "H", "APOSTROFE", "START", "END", "RSUB", 
		"BYTE", "WORD", "RESB", "RESW", "CODOP", "DIR", "HEXVAL", "NUM", "ASCIIVAL"
	};


	public StdAssemblerLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'\n'", "','", "'C'", "'X'", null, "'''", "'START'", "'END'", 
		"'RSUB'", "'BYTE'", "'WORD'", "'RESB'", "'RESW'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "NL", "COMA", "CHAR", "HEX", "H", "APOSTROFE", "START", "END", 
		"RSUB", "BYTE", "WORD", "RESB", "RESW", "CODOP", "DIR", "HEXVAL", "NUM", 
		"ASCIIVAL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "StdAssembler.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x15\xBC\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3"+
		"\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x5\x10\xA7\n\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3"+
		"\x12\x6\x12\xAF\n\x12\r\x12\xE\x12\xB0\x3\x13\x6\x13\xB4\n\x13\r\x13\xE"+
		"\x13\xB5\x3\x14\x6\x14\xB9\n\x14\r\x14\xE\x14\xBA\x2\x2\x2\x15\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15\x3\x2\a\x5\x2\v\v\xF\xF\"\"\x4\x2JJjj\x4\x2\x32;\x43"+
		"H\x3\x2\x32;\x3\x2\x43\\\xD6\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a"+
		"\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x3)\x3\x2\x2\x2\x5-\x3\x2\x2\x2\a/\x3\x2\x2\x2\t"+
		"\x31\x3\x2\x2\x2\v\x33\x3\x2\x2\x2\r\x35\x3\x2\x2\x2\xF\x37\x3\x2\x2\x2"+
		"\x11\x39\x3\x2\x2\x2\x13?\x3\x2\x2\x2\x15\x43\x3\x2\x2\x2\x17H\x3\x2\x2"+
		"\x2\x19M\x3\x2\x2\x2\x1BR\x3\x2\x2\x2\x1DW\x3\x2\x2\x2\x1F\xA6\x3\x2\x2"+
		"\x2!\xA8\x3\x2\x2\x2#\xAE\x3\x2\x2\x2%\xB3\x3\x2\x2\x2\'\xB8\x3\x2\x2"+
		"\x2)*\t\x2\x2\x2*+\x3\x2\x2\x2+,\b\x2\x2\x2,\x4\x3\x2\x2\x2-.\a\f\x2\x2"+
		".\x6\x3\x2\x2\x2/\x30\a.\x2\x2\x30\b\x3\x2\x2\x2\x31\x32\a\x45\x2\x2\x32"+
		"\n\x3\x2\x2\x2\x33\x34\aZ\x2\x2\x34\f\x3\x2\x2\x2\x35\x36\t\x3\x2\x2\x36"+
		"\xE\x3\x2\x2\x2\x37\x38\a)\x2\x2\x38\x10\x3\x2\x2\x2\x39:\aU\x2\x2:;\a"+
		"V\x2\x2;<\a\x43\x2\x2<=\aT\x2\x2=>\aV\x2\x2>\x12\x3\x2\x2\x2?@\aG\x2\x2"+
		"@\x41\aP\x2\x2\x41\x42\a\x46\x2\x2\x42\x14\x3\x2\x2\x2\x43\x44\aT\x2\x2"+
		"\x44\x45\aU\x2\x2\x45\x46\aW\x2\x2\x46G\a\x44\x2\x2G\x16\x3\x2\x2\x2H"+
		"I\a\x44\x2\x2IJ\a[\x2\x2JK\aV\x2\x2KL\aG\x2\x2L\x18\x3\x2\x2\x2MN\aY\x2"+
		"\x2NO\aQ\x2\x2OP\aT\x2\x2PQ\a\x46\x2\x2Q\x1A\x3\x2\x2\x2RS\aT\x2\x2ST"+
		"\aG\x2\x2TU\aU\x2\x2UV\a\x44\x2\x2V\x1C\x3\x2\x2\x2WX\aT\x2\x2XY\aG\x2"+
		"\x2YZ\aU\x2\x2Z[\aY\x2\x2[\x1E\x3\x2\x2\x2\\]\a\x43\x2\x2]^\a\x46\x2\x2"+
		"^\xA7\a\x46\x2\x2_`\a\x43\x2\x2`\x61\aP\x2\x2\x61\xA7\a\x46\x2\x2\x62"+
		"\x63\a\x45\x2\x2\x63\x64\aQ\x2\x2\x64\x65\aO\x2\x2\x65\xA7\aR\x2\x2\x66"+
		"g\a\x46\x2\x2gh\aK\x2\x2h\xA7\aX\x2\x2i\xA7\aL\x2\x2jk\aL\x2\x2kl\aG\x2"+
		"\x2l\xA7\aS\x2\x2mn\aL\x2\x2no\aI\x2\x2o\xA7\aV\x2\x2pq\aL\x2\x2qr\aN"+
		"\x2\x2r\xA7\aV\x2\x2st\aL\x2\x2tu\aU\x2\x2uv\aW\x2\x2v\xA7\a\x44\x2\x2"+
		"wx\aN\x2\x2xy\a\x46\x2\x2y\xA7\a\x43\x2\x2z{\aN\x2\x2{|\a\x46\x2\x2|}"+
		"\a\x45\x2\x2}\xA7\aJ\x2\x2~\x7F\aN\x2\x2\x7F\x80\a\x46\x2\x2\x80\xA7\a"+
		"N\x2\x2\x81\x82\aN\x2\x2\x82\x83\a\x46\x2\x2\x83\xA7\aZ\x2\x2\x84\x85"+
		"\aO\x2\x2\x85\x86\aW\x2\x2\x86\xA7\aN\x2\x2\x87\x88\aQ\x2\x2\x88\xA7\a"+
		"T\x2\x2\x89\x8A\aT\x2\x2\x8A\xA7\a\x46\x2\x2\x8B\x8C\aU\x2\x2\x8C\x8D"+
		"\aV\x2\x2\x8D\xA7\a\x43\x2\x2\x8E\x8F\aU\x2\x2\x8F\x90\aV\x2\x2\x90\x91"+
		"\a\x45\x2\x2\x91\xA7\aJ\x2\x2\x92\x93\aU\x2\x2\x93\x94\aV\x2\x2\x94\xA7"+
		"\aN\x2\x2\x95\x96\aU\x2\x2\x96\x97\aV\x2\x2\x97\x98\aU\x2\x2\x98\xA7\a"+
		"Y\x2\x2\x99\x9A\aU\x2\x2\x9A\x9B\aV\x2\x2\x9B\xA7\aZ\x2\x2\x9C\x9D\aU"+
		"\x2\x2\x9D\x9E\aW\x2\x2\x9E\xA7\a\x44\x2\x2\x9F\xA0\aV\x2\x2\xA0\xA7\a"+
		"\x46\x2\x2\xA1\xA2\aV\x2\x2\xA2\xA3\aK\x2\x2\xA3\xA7\aZ\x2\x2\xA4\xA5"+
		"\aY\x2\x2\xA5\xA7\a\x46\x2\x2\xA6\\\x3\x2\x2\x2\xA6_\x3\x2\x2\x2\xA6\x62"+
		"\x3\x2\x2\x2\xA6\x66\x3\x2\x2\x2\xA6i\x3\x2\x2\x2\xA6j\x3\x2\x2\x2\xA6"+
		"m\x3\x2\x2\x2\xA6p\x3\x2\x2\x2\xA6s\x3\x2\x2\x2\xA6w\x3\x2\x2\x2\xA6z"+
		"\x3\x2\x2\x2\xA6~\x3\x2\x2\x2\xA6\x81\x3\x2\x2\x2\xA6\x84\x3\x2\x2\x2"+
		"\xA6\x87\x3\x2\x2\x2\xA6\x89\x3\x2\x2\x2\xA6\x8B\x3\x2\x2\x2\xA6\x8E\x3"+
		"\x2\x2\x2\xA6\x92\x3\x2\x2\x2\xA6\x95\x3\x2\x2\x2\xA6\x99\x3\x2\x2\x2"+
		"\xA6\x9C\x3\x2\x2\x2\xA6\x9F\x3\x2\x2\x2\xA6\xA1\x3\x2\x2\x2\xA6\xA4\x3"+
		"\x2\x2\x2\xA7 \x3\x2\x2\x2\xA8\xA9\t\x4\x2\x2\xA9\xAA\t\x4\x2\x2\xAA\xAB"+
		"\t\x4\x2\x2\xAB\xAC\t\x4\x2\x2\xAC\"\x3\x2\x2\x2\xAD\xAF\t\x4\x2\x2\xAE"+
		"\xAD\x3\x2\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB0\xB1\x3\x2"+
		"\x2\x2\xB1$\x3\x2\x2\x2\xB2\xB4\t\x5\x2\x2\xB3\xB2\x3\x2\x2\x2\xB4\xB5"+
		"\x3\x2\x2\x2\xB5\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6&\x3\x2\x2\x2"+
		"\xB7\xB9\t\x6\x2\x2\xB8\xB7\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\xB8\x3"+
		"\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB(\x3\x2\x2\x2\a\x2\xA6\xB0\xB5\xBA\x3"+
		"\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SIC_Sim
=======
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Daniel\Desktop\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class StdAssemblerLexer : Lexer {
	public const int
		WS=1, NL=2, COMA=3, CHAR=4, HEX=5, H=6, APOSTROFE=7, START=8, END=9, RSUB=10, 
		BYTE=11, WORD=12, RESB=13, RESW=14, CODOP=15, DIR=16, HEXVAL=17, ASCIIVAL=18, 
		NUM=19;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"WS", "NL", "COMA", "CHAR", "HEX", "H", "APOSTROFE", "START", "END", "RSUB", 
		"BYTE", "WORD", "RESB", "RESW", "CODOP", "DIR", "HEXVAL", "ASCIIVAL", 
		"NUM"
	};


	public StdAssemblerLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'\n'", "','", "'C'", "'X'", null, "'''", "'START'", "'END'", 
		"'RSUB'", "'BYTE'", "'WORD'", "'RESB'", "'RESW'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "WS", "NL", "COMA", "CHAR", "HEX", "H", "APOSTROFE", "START", "END", 
		"RSUB", "BYTE", "WORD", "RESB", "RESW", "CODOP", "DIR", "HEXVAL", "ASCIIVAL", 
		"NUM"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "StdAssembler.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x15\xBF\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x3\x2\x6"+
		"\x2+\n\x2\r\x2\xE\x2,\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5"+
		"\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3"+
		"\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3"+
		"\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x5\x10\xAA\n\x10\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x11\x3\x12\x6\x12\xB2\n\x12\r\x12\xE\x12\xB3\x3\x13\x6"+
		"\x13\xB7\n\x13\r\x13\xE\x13\xB8\x3\x14\x6\x14\xBC\n\x14\r\x14\xE\x14\xBD"+
		"\x2\x2\x2\x15\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t"+
		"\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F"+
		"\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15\x3\x2\x6\x5\x2\v\v\xF\xF\"\""+
		"\x4\x2JJjj\x4\x2\x32;\x43H\x3\x2\x32;\xDA\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x3*\x3\x2\x2\x2\x5\x30\x3\x2\x2\x2\a\x32"+
		"\x3\x2\x2\x2\t\x34\x3\x2\x2\x2\v\x36\x3\x2\x2\x2\r\x38\x3\x2\x2\x2\xF"+
		":\x3\x2\x2\x2\x11<\x3\x2\x2\x2\x13\x42\x3\x2\x2\x2\x15\x46\x3\x2\x2\x2"+
		"\x17K\x3\x2\x2\x2\x19P\x3\x2\x2\x2\x1BU\x3\x2\x2\x2\x1DZ\x3\x2\x2\x2\x1F"+
		"\xA9\x3\x2\x2\x2!\xAB\x3\x2\x2\x2#\xB1\x3\x2\x2\x2%\xB6\x3\x2\x2\x2\'"+
		"\xBB\x3\x2\x2\x2)+\t\x2\x2\x2*)\x3\x2\x2\x2+,\x3\x2\x2\x2,*\x3\x2\x2\x2"+
		",-\x3\x2\x2\x2-.\x3\x2\x2\x2./\b\x2\x2\x2/\x4\x3\x2\x2\x2\x30\x31\a\f"+
		"\x2\x2\x31\x6\x3\x2\x2\x2\x32\x33\a.\x2\x2\x33\b\x3\x2\x2\x2\x34\x35\a"+
		"\x45\x2\x2\x35\n\x3\x2\x2\x2\x36\x37\aZ\x2\x2\x37\f\x3\x2\x2\x2\x38\x39"+
		"\t\x3\x2\x2\x39\xE\x3\x2\x2\x2:;\a)\x2\x2;\x10\x3\x2\x2\x2<=\aU\x2\x2"+
		"=>\aV\x2\x2>?\a\x43\x2\x2?@\aT\x2\x2@\x41\aV\x2\x2\x41\x12\x3\x2\x2\x2"+
		"\x42\x43\aG\x2\x2\x43\x44\aP\x2\x2\x44\x45\a\x46\x2\x2\x45\x14\x3\x2\x2"+
		"\x2\x46G\aT\x2\x2GH\aU\x2\x2HI\aW\x2\x2IJ\a\x44\x2\x2J\x16\x3\x2\x2\x2"+
		"KL\a\x44\x2\x2LM\a[\x2\x2MN\aV\x2\x2NO\aG\x2\x2O\x18\x3\x2\x2\x2PQ\aY"+
		"\x2\x2QR\aQ\x2\x2RS\aT\x2\x2ST\a\x46\x2\x2T\x1A\x3\x2\x2\x2UV\aT\x2\x2"+
		"VW\aG\x2\x2WX\aU\x2\x2XY\a\x44\x2\x2Y\x1C\x3\x2\x2\x2Z[\aT\x2\x2[\\\a"+
		"G\x2\x2\\]\aU\x2\x2]^\aY\x2\x2^\x1E\x3\x2\x2\x2_`\a\x43\x2\x2`\x61\a\x46"+
		"\x2\x2\x61\xAA\a\x46\x2\x2\x62\x63\a\x43\x2\x2\x63\x64\aP\x2\x2\x64\xAA"+
		"\a\x46\x2\x2\x65\x66\a\x45\x2\x2\x66g\aQ\x2\x2gh\aO\x2\x2h\xAA\aR\x2\x2"+
		"ij\a\x46\x2\x2jk\aK\x2\x2k\xAA\aX\x2\x2l\xAA\aL\x2\x2mn\aL\x2\x2no\aG"+
		"\x2\x2o\xAA\aS\x2\x2pq\aL\x2\x2qr\aI\x2\x2r\xAA\aV\x2\x2st\aL\x2\x2tu"+
		"\aN\x2\x2u\xAA\aV\x2\x2vw\aL\x2\x2wx\aU\x2\x2xy\aW\x2\x2y\xAA\a\x44\x2"+
		"\x2z{\aN\x2\x2{|\a\x46\x2\x2|\xAA\a\x43\x2\x2}~\aN\x2\x2~\x7F\a\x46\x2"+
		"\x2\x7F\x80\a\x45\x2\x2\x80\xAA\aJ\x2\x2\x81\x82\aN\x2\x2\x82\x83\a\x46"+
		"\x2\x2\x83\xAA\aN\x2\x2\x84\x85\aN\x2\x2\x85\x86\a\x46\x2\x2\x86\xAA\a"+
		"Z\x2\x2\x87\x88\aO\x2\x2\x88\x89\aW\x2\x2\x89\xAA\aN\x2\x2\x8A\x8B\aQ"+
		"\x2\x2\x8B\xAA\aT\x2\x2\x8C\x8D\aT\x2\x2\x8D\xAA\a\x46\x2\x2\x8E\x8F\a"+
		"U\x2\x2\x8F\x90\aV\x2\x2\x90\xAA\a\x43\x2\x2\x91\x92\aU\x2\x2\x92\x93"+
		"\aV\x2\x2\x93\x94\a\x45\x2\x2\x94\xAA\aJ\x2\x2\x95\x96\aU\x2\x2\x96\x97"+
		"\aV\x2\x2\x97\xAA\aN\x2\x2\x98\x99\aU\x2\x2\x99\x9A\aV\x2\x2\x9A\x9B\a"+
		"U\x2\x2\x9B\xAA\aY\x2\x2\x9C\x9D\aU\x2\x2\x9D\x9E\aV\x2\x2\x9E\xAA\aZ"+
		"\x2\x2\x9F\xA0\aU\x2\x2\xA0\xA1\aW\x2\x2\xA1\xAA\a\x44\x2\x2\xA2\xA3\a"+
		"V\x2\x2\xA3\xAA\a\x46\x2\x2\xA4\xA5\aV\x2\x2\xA5\xA6\aK\x2\x2\xA6\xAA"+
		"\aZ\x2\x2\xA7\xA8\aY\x2\x2\xA8\xAA\a\x46\x2\x2\xA9_\x3\x2\x2\x2\xA9\x62"+
		"\x3\x2\x2\x2\xA9\x65\x3\x2\x2\x2\xA9i\x3\x2\x2\x2\xA9l\x3\x2\x2\x2\xA9"+
		"m\x3\x2\x2\x2\xA9p\x3\x2\x2\x2\xA9s\x3\x2\x2\x2\xA9v\x3\x2\x2\x2\xA9z"+
		"\x3\x2\x2\x2\xA9}\x3\x2\x2\x2\xA9\x81\x3\x2\x2\x2\xA9\x84\x3\x2\x2\x2"+
		"\xA9\x87\x3\x2\x2\x2\xA9\x8A\x3\x2\x2\x2\xA9\x8C\x3\x2\x2\x2\xA9\x8E\x3"+
		"\x2\x2\x2\xA9\x91\x3\x2\x2\x2\xA9\x95\x3\x2\x2\x2\xA9\x98\x3\x2\x2\x2"+
		"\xA9\x9C\x3\x2\x2\x2\xA9\x9F\x3\x2\x2\x2\xA9\xA2\x3\x2\x2\x2\xA9\xA4\x3"+
		"\x2\x2\x2\xA9\xA7\x3\x2\x2\x2\xAA \x3\x2\x2\x2\xAB\xAC\t\x4\x2\x2\xAC"+
		"\xAD\t\x4\x2\x2\xAD\xAE\t\x4\x2\x2\xAE\xAF\t\x4\x2\x2\xAF\"\x3\x2\x2\x2"+
		"\xB0\xB2\t\x4\x2\x2\xB1\xB0\x3\x2\x2\x2\xB2\xB3\x3\x2\x2\x2\xB3\xB1\x3"+
		"\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4$\x3\x2\x2\x2\xB5\xB7\t\x4\x2\x2\xB6"+
		"\xB5\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xB6\x3\x2\x2\x2\xB8\xB9\x3\x2"+
		"\x2\x2\xB9&\x3\x2\x2\x2\xBA\xBC\t\x5\x2\x2\xBB\xBA\x3\x2\x2\x2\xBC\xBD"+
		"\x3\x2\x2\x2\xBD\xBB\x3\x2\x2\x2\xBD\xBE\x3\x2\x2\x2\xBE(\x3\x2\x2\x2"+
		"\b\x2,\xA9\xB3\xB8\xBD\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SIC_Sim
>>>>>>> origin/master
