//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\becarios\Documents\GitHub\ProgramacionDeSistemas\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IStdAssemblerListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class StdAssemblerBaseListener : IStdAssemblerListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>DirByteChar</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirByteChar([NotNull] StdAssemblerParser.DirByteCharContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DirByteChar</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirByteChar([NotNull] StdAssemblerParser.DirByteCharContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>DirWord</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirWord([NotNull] StdAssemblerParser.DirWordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DirWord</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirWord([NotNull] StdAssemblerParser.DirWordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>DirResw</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirResw([NotNull] StdAssemblerParser.DirReswContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DirResw</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirResw([NotNull] StdAssemblerParser.DirReswContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>DirByteHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirByteHex([NotNull] StdAssemblerParser.DirByteHexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DirByteHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirByteHex([NotNull] StdAssemblerParser.DirByteHexContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>DirResb</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirResb([NotNull] StdAssemblerParser.DirResbContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DirResb</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirResb([NotNull] StdAssemblerParser.DirResbContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>PropDir</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropDir([NotNull] StdAssemblerParser.PropDirContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PropDir</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropDir([NotNull] StdAssemblerParser.PropDirContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>PropInstr</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropInstr([NotNull] StdAssemblerParser.PropInstrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PropInstr</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropInstr([NotNull] StdAssemblerParser.PropInstrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>RSub</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRSub([NotNull] StdAssemblerParser.RSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>RSub</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRSub([NotNull] StdAssemblerParser.RSubContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>CodOp</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCodOp([NotNull] StdAssemblerParser.CodOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CodOp</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCodOp([NotNull] StdAssemblerParser.CodOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.linea"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLinea([NotNull] StdAssemblerParser.LineaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.linea"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLinea([NotNull] StdAssemblerParser.LineaContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.programa"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrograma([NotNull] StdAssemblerParser.ProgramaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.programa"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrograma([NotNull] StdAssemblerParser.ProgramaContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.inicio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInicio([NotNull] StdAssemblerParser.InicioContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.inicio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInicio([NotNull] StdAssemblerParser.InicioContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.fin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFin([NotNull] StdAssemblerParser.FinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.fin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFin([NotNull] StdAssemblerParser.FinContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.proposiciones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProposiciones([NotNull] StdAssemblerParser.ProposicionesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.proposiciones"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProposiciones([NotNull] StdAssemblerParser.ProposicionesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.proposicion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProposicion([NotNull] StdAssemblerParser.ProposicionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.proposicion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProposicion([NotNull] StdAssemblerParser.ProposicionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion([NotNull] StdAssemblerParser.InstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion([NotNull] StdAssemblerParser.InstruccionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDirectiva([NotNull] StdAssemblerParser.DirectivaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.directiva"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDirectiva([NotNull] StdAssemblerParser.DirectivaContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.etiqueta"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEtiqueta([NotNull] StdAssemblerParser.EtiquetaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.etiqueta"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEtiqueta([NotNull] StdAssemblerParser.EtiquetaContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.etiquetaFin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEtiquetaFin([NotNull] StdAssemblerParser.EtiquetaFinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.etiquetaFin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEtiquetaFin([NotNull] StdAssemblerParser.EtiquetaFinContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace SIC_Sim
