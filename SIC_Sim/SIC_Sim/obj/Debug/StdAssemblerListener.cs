//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\MILAN\Documents\GitHub\ProgramacionDeSistemas\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="StdAssemblerParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public interface IStdAssemblerListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>CodOp</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCodOp([NotNull] StdAssemblerParser.CodOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CodOp</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCodOp([NotNull] StdAssemblerParser.CodOpContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>RSub</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRSub([NotNull] StdAssemblerParser.RSubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RSub</c>
	/// labeled alternative in <see cref="StdAssemblerParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRSub([NotNull] StdAssemblerParser.RSubContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PropDir</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropDir([NotNull] StdAssemblerParser.PropDirContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PropDir</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropDir([NotNull] StdAssemblerParser.PropDirContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PropInstr</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropInstr([NotNull] StdAssemblerParser.PropInstrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PropInstr</c>
	/// labeled alternative in <see cref="StdAssemblerParser.proposicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropInstr([NotNull] StdAssemblerParser.PropInstrContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirReswInt</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirReswInt([NotNull] StdAssemblerParser.DirReswIntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirReswInt</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirReswInt([NotNull] StdAssemblerParser.DirReswIntContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirWordInt</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirWordInt([NotNull] StdAssemblerParser.DirWordIntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirWordInt</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirWordInt([NotNull] StdAssemblerParser.DirWordIntContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirByteChar</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirByteChar([NotNull] StdAssemblerParser.DirByteCharContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirByteChar</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirByteChar([NotNull] StdAssemblerParser.DirByteCharContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirWordHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirWordHex([NotNull] StdAssemblerParser.DirWordHexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirWordHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirWordHex([NotNull] StdAssemblerParser.DirWordHexContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirResbHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirResbHex([NotNull] StdAssemblerParser.DirResbHexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirResbHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirResbHex([NotNull] StdAssemblerParser.DirResbHexContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirResbInt</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirResbInt([NotNull] StdAssemblerParser.DirResbIntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirResbInt</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirResbInt([NotNull] StdAssemblerParser.DirResbIntContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirReswHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirReswHex([NotNull] StdAssemblerParser.DirReswHexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirReswHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirReswHex([NotNull] StdAssemblerParser.DirReswHexContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DirByteHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirByteHex([NotNull] StdAssemblerParser.DirByteHexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DirByteHex</c>
	/// labeled alternative in <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirByteHex([NotNull] StdAssemblerParser.DirByteHexContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.linea"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinea([NotNull] StdAssemblerParser.LineaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.linea"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinea([NotNull] StdAssemblerParser.LineaContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrograma([NotNull] StdAssemblerParser.ProgramaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrograma([NotNull] StdAssemblerParser.ProgramaContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.inicio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInicio([NotNull] StdAssemblerParser.InicioContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.inicio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInicio([NotNull] StdAssemblerParser.InicioContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.fin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFin([NotNull] StdAssemblerParser.FinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.fin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFin([NotNull] StdAssemblerParser.FinContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.proposiciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProposiciones([NotNull] StdAssemblerParser.ProposicionesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.proposiciones"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProposiciones([NotNull] StdAssemblerParser.ProposicionesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.proposicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProposicion([NotNull] StdAssemblerParser.ProposicionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.proposicion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProposicion([NotNull] StdAssemblerParser.ProposicionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion([NotNull] StdAssemblerParser.InstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion([NotNull] StdAssemblerParser.InstruccionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirectiva([NotNull] StdAssemblerParser.DirectivaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.directiva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirectiva([NotNull] StdAssemblerParser.DirectivaContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.etiqueta"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEtiqueta([NotNull] StdAssemblerParser.EtiquetaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.etiqueta"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEtiqueta([NotNull] StdAssemblerParser.EtiquetaContext context);
}
} // namespace SIC_Sim
