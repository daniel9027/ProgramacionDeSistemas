//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\MILAN\Documents\GitHub\ProgramacionDeSistemas\SIC_Sim\SIC_Sim\StdAssembler.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SIC_Sim {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="StdAssemblerParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public interface IStdAssemblerListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>Double</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDouble([NotNull] StdAssemblerParser.DoubleContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Double</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDouble([NotNull] StdAssemblerParser.DoubleContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantPI</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantPI([NotNull] StdAssemblerParser.ConstantPIContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantPI</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantPI([NotNull] StdAssemblerParser.ConstantPIContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] StdAssemblerParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Variable</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] StdAssemblerParser.VariableContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConstantE</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantE([NotNull] StdAssemblerParser.ConstantEContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstantE</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantE([NotNull] StdAssemblerParser.ConstantEContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Braces</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBraces([NotNull] StdAssemblerParser.BracesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Braces</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBraces([NotNull] StdAssemblerParser.BracesContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt([NotNull] StdAssemblerParser.IntContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Int</c>
	/// labeled alternative in <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt([NotNull] StdAssemblerParser.IntContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplication([NotNull] StdAssemblerParser.MultiplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplication</c>
	/// labeled alternative in <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplication([NotNull] StdAssemblerParser.MultiplicationContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivision([NotNull] StdAssemblerParser.DivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivision([NotNull] StdAssemblerParser.DivisionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ToPow</c>
	/// labeled alternative in <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToPow([NotNull] StdAssemblerParser.ToPowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ToPow</c>
	/// labeled alternative in <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToPow([NotNull] StdAssemblerParser.ToPowContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ToSetVar</c>
	/// labeled alternative in <see cref="StdAssemblerParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToSetVar([NotNull] StdAssemblerParser.ToSetVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ToSetVar</c>
	/// labeled alternative in <see cref="StdAssemblerParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToSetVar([NotNull] StdAssemblerParser.ToSetVarContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Power</c>
	/// labeled alternative in <see cref="StdAssemblerParser.pow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPower([NotNull] StdAssemblerParser.PowerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Power</c>
	/// labeled alternative in <see cref="StdAssemblerParser.pow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPower([NotNull] StdAssemblerParser.PowerContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ChangeSign</c>
	/// labeled alternative in <see cref="StdAssemblerParser.unaryMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChangeSign([NotNull] StdAssemblerParser.ChangeSignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ChangeSign</c>
	/// labeled alternative in <see cref="StdAssemblerParser.unaryMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChangeSign([NotNull] StdAssemblerParser.ChangeSignContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ToAtom</c>
	/// labeled alternative in <see cref="StdAssemblerParser.unaryMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToAtom([NotNull] StdAssemblerParser.ToAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ToAtom</c>
	/// labeled alternative in <see cref="StdAssemblerParser.unaryMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToAtom([NotNull] StdAssemblerParser.ToAtomContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>SetVariable</c>
	/// labeled alternative in <see cref="StdAssemblerParser.setVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetVariable([NotNull] StdAssemblerParser.SetVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SetVariable</c>
	/// labeled alternative in <see cref="StdAssemblerParser.setVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetVariable([NotNull] StdAssemblerParser.SetVariableContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Calculate</c>
	/// labeled alternative in <see cref="StdAssemblerParser.setVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCalculate([NotNull] StdAssemblerParser.CalculateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Calculate</c>
	/// labeled alternative in <see cref="StdAssemblerParser.setVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCalculate([NotNull] StdAssemblerParser.CalculateContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlus([NotNull] StdAssemblerParser.PlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Plus</c>
	/// labeled alternative in <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlus([NotNull] StdAssemblerParser.PlusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinus([NotNull] StdAssemblerParser.MinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Minus</c>
	/// labeled alternative in <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinus([NotNull] StdAssemblerParser.MinusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ToMultOrDiv</c>
	/// labeled alternative in <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterToMultOrDiv([NotNull] StdAssemblerParser.ToMultOrDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ToMultOrDiv</c>
	/// labeled alternative in <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitToMultOrDiv([NotNull] StdAssemblerParser.ToMultOrDivContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] StdAssemblerParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] StdAssemblerParser.ProgContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput([NotNull] StdAssemblerParser.InputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput([NotNull] StdAssemblerParser.InputContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.setVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetVar([NotNull] StdAssemblerParser.SetVarContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.setVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetVar([NotNull] StdAssemblerParser.SetVarContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlusOrMinus([NotNull] StdAssemblerParser.PlusOrMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.plusOrMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlusOrMinus([NotNull] StdAssemblerParser.PlusOrMinusContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultOrDiv([NotNull] StdAssemblerParser.MultOrDivContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.multOrDiv"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultOrDiv([NotNull] StdAssemblerParser.MultOrDivContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.pow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPow([NotNull] StdAssemblerParser.PowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.pow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPow([NotNull] StdAssemblerParser.PowContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.unaryMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryMinus([NotNull] StdAssemblerParser.UnaryMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.unaryMinus"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryMinus([NotNull] StdAssemblerParser.UnaryMinusContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] StdAssemblerParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="StdAssemblerParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] StdAssemblerParser.AtomContext context);
}
} // namespace SIC_Sim
